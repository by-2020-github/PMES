<UserControl x:Class="PMES_Automatic_Net6.Views.DebugView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:PMES_Automatic_Net6.Views"
             xmlns:xceed="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:viewModels="clr-namespace:PMES_Automatic_Net6.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="1080"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.Foreground="{DynamicResource MaterialDesign.Brush.Foreground}"
             Background="{DynamicResource MaterialDesign.Brush.Background}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
             d:DataContext="{d:DesignInstance viewModels:DebugViewModel}">

    <TabControl>
        <TabItem Header="PLC一般指令">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"></RowDefinition>
                    <RowDefinition Height="120"></RowDefinition>
                    <RowDefinition Height="1*"></RowDefinition>
                    <RowDefinition Height="5"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" HorizontalAlignment="Left"
                            VerticalAlignment="Center" Orientation="Horizontal">
                    <TextBlock Width="30" Height="25" Text="Ip" HorizontalAlignment="Right" Margin="15,15,0,0"></TextBlock>
                    <TextBox Width="120" Height="25" Text="{Binding Ip}" Margin="15,15,0,0"></TextBox>
                    <TextBlock Width="30" Height="25" Text="Rack" HorizontalAlignment="Right" Margin="15,15,0,0"></TextBlock>
                    <TextBox Width="120" Height="25" Text="{Binding Rack}" Margin="15,15,0,0"></TextBox>
                    <TextBlock Width="30" Height="25" Text="Slot" HorizontalAlignment="Right" Margin="15,15,0,0"></TextBlock>
                    <TextBox Width="120" Height="25" Text="{Binding Slot}" Margin="15,15,0,0"></TextBox>
                    <Button Width="80" Height="30" Content="Open" Margin="15,15,0,0"></Button>
                    <Button Width="80" Height="30" Content="Close" Margin="15,15,0,0"></Button>
                    <CheckBox Width="100" Height="25" Content="IsOpen" Margin="15,15,0,0" IsChecked="{Binding IsOpen}"
                              VerticalContentAlignment="Center">
                    </CheckBox>
                </StackPanel>
                <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" BorderThickness="1" BorderBrush="Gray">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <ComboBox Name="CbxClassType" VerticalContentAlignment="Center" Height="45" Width="260"
                                  Margin="20"
                                  ItemsSource="{Binding Path=CmdStruct}" SelectedItem="{Binding SelectedCmdItem}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding CmdComBoxChangedCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Label Width="80" Height="30" Margin="20" Content="DbBlock:" VerticalContentAlignment="Center"></Label>
                        <TextBox Width="80" Height="30" Margin="20" VerticalAlignment="Center"
                                 HorizontalAlignment="Left" Text="{Binding DbBlock}">
                        </TextBox>
                        <Button Width="80" Height="30" Margin="20" Content="Send" Command="{Binding SendCmdCommand}"></Button>
                        <Button Width="80" Height="30" Margin="20" Content="Read" Command="{Binding ReadCmdCommand}"></Button>
                    </StackPanel>
                </Border>

                <Border Margin="5" Grid.Row="2" Grid.Column="0" BorderThickness="1" BorderBrush="Gray">
                    <xceed:PropertyGrid Name="PropCmdSend" SelectedObject="{Binding WriteObject}"></xceed:PropertyGrid>
                </Border>
                <Border Margin="5" Grid.Row="2" Grid.Column="1" BorderThickness="1" BorderBrush="Gray">
                    <xceed:PropertyGrid Name="PropCmdRead" SelectedObject="{Binding ReadObject}"></xceed:PropertyGrid>
                </Border>
            </Grid>
        </TabItem>
        <TabItem Header="PLC包含字符串指令">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="120"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <ComboBox VerticalContentAlignment="Center" Height="45" Width="260" Margin="20"
                              ItemsSource="{Binding Path=CmdStrStruct}" SelectedItem="{Binding SelectedCmdStrItem}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding CmdComBoxStrChangedCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                    <Button Margin="20" Width="80" Height="30" Content="Send"
                            Command="{Binding SendCmdWithStrCommand}">
                    </Button>
                    <Button Margin="20" Width="80" Height="30" Content="Read"
                            Command="{Binding ReadCmdWithStrCommand}">
                    </Button>
                </StackPanel>

                <DataGrid Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding StrCmdDataItems}"
                          CanUserAddRows="False">
                </DataGrid>
            </Grid>
        </TabItem>

        <TabItem Header="信捷PLC">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="120"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal"
                            Margin="20">
                    <TextBlock Width="30" Height="25" Text="Ip" HorizontalAlignment="Right" Margin="15,15,0,0"></TextBlock>
                    <TextBox Width="120" Height="25" Text="{Binding IpJieDa}" Margin="15,15,0,0"></TextBox>
                    <TextBlock Width="30" Height="25" Text="Port" HorizontalAlignment="Right" Margin="15,15,0,0"></TextBlock>
                    <TextBox Width="120" Height="25" Text="{Binding Port}" Margin="15,15,0,0"></TextBox>
                    <Button Width="100" Height="25" Content="Open" Margin="15,15,0,0"></Button>
                    <Button Width="100" Height="25" Content="Close" Margin="15,15,0,0"></Button>
                    <CheckBox Width="100" Height="25" Content="IsOpen" Margin="15,15,0,0"
                              IsChecked="{Binding IsOpenJieDa}" VerticalContentAlignment="Center">
                    </CheckBox>
                    <Button Width="100" Height="25" Content="Send" Margin="15,15,0,0"></Button>
                    <Button Width="100" Height="25" Content="Read" Margin="15,15,0,0"></Button>
                </StackPanel>

                <DataGrid Grid.Column="0" Grid.Row="1" ItemsSource="{Binding ModbusCmds}" CanUserAddRows="False"></DataGrid>

            </Grid>

        </TabItem>

    </TabControl>
</UserControl>